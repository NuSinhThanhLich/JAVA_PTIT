import java.io.File;
import java.io.FileNotFoundException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 *
 */
public class Main {

    private static class SinhVien implements Comparable<SinhVien> {
        private String name;
        Date vao, ra;
        private long time;



        public SinhVien(Scanner sc) throws ParseException {
            try {
                this.name = sc.nextLine();
                this.vao = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").parse(sc.nextLine());
                this.ra = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").parse(sc.nextLine());
                this.time = getTime(this.vao,this.ra);
            } catch (ParseException ex) {
                Logger.getLogger(SinhVien.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        static long getTime(Date a, Date b) {
          return Math.round((float) (b.getTime() - a.getTime()) / (1000 * 60));
        }

        @Override
        public String toString() {
            return String.format("%s %d",this.name, this.time);
        }

        @Override
        public int compareTo(SinhVien c) {
          if (this.time == c.time) {
              if (this.name.compareTo(c.name) > 0) {
                  return 1;
              } else {
                  return -1;
              }
          } else if (this.time > c.time) {
              return -1;
          } else {
              return 1;
          }
        }
    }


    public static void main(String[] args) throws FileNotFoundException {
        Scanner sc = new Scanner(new File("ONLINE.in"));
        int t = Integer.parseInt(sc.nextLine());
        ArrayList<SinhVien> al = new ArrayList<>();
        while (t-- > 0) {
            try {
                al.add(new SinhVien(sc));
            } catch (ParseException e) {
                throw new RuntimeException(e);
            }

        }
        Collections.sort(al);
        for (SinhVien m : al) {
            System.out.println(m);
        }
    }
}
