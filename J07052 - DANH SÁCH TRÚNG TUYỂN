
import java.io.File;
import java.io.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;
import java.math.BigInteger;
import java.util.*;
import java.util.Arrays;
import java.lang.Math;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.text.DecimalFormat;

class TS {

   String code;
   String name;
   float math;
   float physic;
   float chemical;
   float priority;
   float score;

   void input(Scanner sc) {
        sc.nextLine();
        this.code = sc.nextLine();
        this.name = sc.nextLine();
        this.math = sc.nextFloat();
        this.physic = sc.nextFloat();
        this.chemical = sc.nextFloat();

        name = this.configName(name);
        if (code.charAt(2) == '1') {
            this.priority = 0.5F;
        }
       if (code.charAt(2) == '2') {
           this.priority = 1.0F;
       }
       if (code.charAt(2) == '3') {
           this.priority = 2.5F;
       }

       this.score = math * 2 + physic + chemical + priority;
   }

    String configName (String a) {
       String s = "";
       String[] k = a.trim().toLowerCase().split("\\s+");
       for (String m : k) {
           s += m.substring(0,1).toUpperCase() + m.substring(1) + " ";
       }
       return s;
    }
    void output() {

        System.out.printf("%s %s%s %s", this.code, this.name, new DecimalFormat().format(this.priority), new DecimalFormat().format(this.score));
    }
}

public class Practice {

    public static void main(String[] args) throws FileNotFoundException, ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Scanner sc = new Scanner(new File("THISINH.in"));
        int n = sc.nextInt();
        Vector<TS> v = new Vector<>();
        for (int i = 0; i < n; i++) {
            TS a = new TS();
            a.input(sc);
            v.add(a);
        }
        int quantity = sc.nextInt();

        Collections.sort(v, new Comparator<TS>() {
            @Override
            public int compare(TS a, TS b) {
                if (a.score == b.score) {
                    if (a.code.compareTo(b.code) > 0) {
                        return 1;
                    } else {
                        return -1;
                    }
                } else if (a.score > b.score) {
                    return -1;
                } else {
                    return 1;
                }
            }
        });
        float scoreToGetIn = v.get(quantity - 1).score;
        System.out.printf("%.1f\n", scoreToGetIn);
        for (int i = 0; i < n; i++) {
            v.get(i).output();
            if (v.get(i).score >= scoreToGetIn) {
                System.out.printf(" TRUNG TUYEN\n");
            } else {
                System.out.printf(" TRUOT\n");
            }
        }
    }
}
