// Press Shift twice to open the Search Everywhere dialog and type `show whitespaces`,
// then press Enter. You can now see whitespace characters in your code.

import java.io.File;
import java.io.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;
import java.math.BigInteger;
import java.util.*;
import java.util.Arrays;
import java.lang.Math;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.text.DecimalFormat;
import static java.lang.Math.round;

public class Main {

    private static class Person implements Comparable<Person> {
        private String tenFull, tenChinh;

        public Person(Scanner sc) {
            this.tenFull = configName(sc.nextLine());
            this.tenChinh = layTenChinh(tenFull);
        }

        public String layTenChinh(String s) {
            String[] data = s.split("\\s+");
            return data[data.length - 1];
        }
        public String configName(String s) {
            String a = "";
            String []k = s.trim().toLowerCase().split("\\s+");
            for (String m : k) {
                a += m.substring(0,1).toUpperCase() + m.substring(1) + " ";
            }
            return a;
        }

        @Override
        public String toString() {
            return this.tenFull;
        }

        @Override
        public int compareTo(Person a) {
            if (this.tenChinh.contentEquals(a.tenChinh)) {
                if (this.tenFull.compareTo(a.tenFull) > 0) {
                    return 1;
                } else {
                    return -1;
                }
            } else if (this.tenChinh.compareTo(a.tenChinh) > 0) {
                return 1;
            } else {
                return -1;
            }
        }
    }

    public static void main(String[] args) throws FileNotFoundException {
        Scanner sc = new Scanner(new File("DANHSACH.in"));
        ArrayList<Person> dsP = new ArrayList<>();
        while (sc.hasNextLine()) {
            dsP.add(new Person(sc));
        }
        Collections.sort(dsP);
        for (Person tmp : dsP) {
            System.out.println(tmp);
        }
    }
}
